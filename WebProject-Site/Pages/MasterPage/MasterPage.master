<%@ Master Language="C#" AutoEventWireup="true" CodeFile="MasterPage.master.cs" Inherits="Pages_MasterPage_MasterPage" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
    <asp:ContentPlaceHolder id="head" runat="server">
    </asp:ContentPlaceHolder>
</head>
<body onload="updateUpperBarSize();">
    <div>
        <div id="Upper_Bar" class="upperbar" style="visibility:hidden">
            <div id="homePage" class="upperbarItem dropdown">
                <a id="homePage_btn" href="/Pages/HomePage/HomePage.aspx" class="upperbarlink">
                    <p>Home Page</p>
                    <img src="/Resources/Icons/dropdown_icon.png" id="homePageDropIcon" style="visibility:hidden" class="menuIcon"/>
                </a>
                <div class="dropdown-hider"></div>
                <div id="dropdown_content" class="dropdown-content" style="visibility:hidden">
                    <a id="welcomelink" href="#welcomePos" class="dropdown_option">
                        <p>Welcome</p>
                        <img src="/Resources/Icons/dropdownLink_icon.png" id="linkIcon0" style="visibility:hidden" class="dropdownIcon"/>
                    </a>
                    <a id="loginlink" href="#loginDiv" class="dropdown_option">
                        <p>Log In</p>
                        <img src="/Resources/Icons/dropdownLink_icon.png" id="linkIcon1" style="visibility:hidden" class="dropdownIcon"/>
                    </a>
                    <a id="signuplink" href="#signupDiv" class="dropdown_option">
                        <p>Sign Up</p>
                        <img src="/Resources/Icons/dropdownLink_icon.png" id="linkIcon2" style="visibility:hidden" class="dropdownIcon"/>
                    </a>
                    <a id="aboutlink" href="#aboutDiv" class="dropdown_option">
                        <p>About</p>
                        <img src="/Resources/Icons/dropdownLink_icon.png" id="linkIcon3" style="visibility:hidden" class="dropdownIcon"/>
                    </a>
                    <a id="termslink" href="#termDiv" class="dropdown_option">
                        <p>Terms of use</p>
                        <img src="/Resources/Icons/dropdownLink_icon.png" id="linkIcon4" style="visibility:hidden" class="dropdownIcon"/>
                    </a>
                </div>
            </div>
            <!-- -->
            <div id="workingSpace" class="upperbarItem">
                <a id="workingSpace_btn" href="/Pages/WorkingSpace/WorkingSpace.aspx" class="upperbarlink">
                    <p>Working Space</p>
                    <img src="/Resources/Icons/pagelink_icon.png" id="workingspaceLinkIcon" style="visibility:hidden" class="menuIcon"/>
                </a>
            </div>
            <!-- -->
            <div id="library" class="upperbarItem">
                <a id="library_btn" href="/Pages/Library/Library.aspx" class="upperbarlink">
                    <p>Library</p>
                    <img src="/Resources/Icons/pagelink_icon.png" id="libraryLinkIcon" style="visibility:hidden" class="menuIcon"/>
                </a>
            </div>
            <a id="profile_link" class="profile_div" href="/Pages/ProfilePage/ProfilePage.aspx" style="visibility:hidden" runat="server">
                <img id="profile_img" src="" class="profile_img"/>
                <p id="profile_txt" class="profile_txt" runat="server"></p>
            </a>
        </div>
        <script src="/Pages/MasterPage/MasterPageJs.js"></script>
        <script src="/Pages/HomePage/HomePageJs.js"></script>
        <script src="/Pages/WorkingSpace/colorpicker.js"></script>
        <div id="glslShaders">
                    <script type="x-shader/x-fragment" id="sphere-fragment-shader">#version 300 es
                        precision mediump float;
                        
                        uniform vec3 viewPos;

                        vec3 CalcAmbient(vec3 lightColor);
                        vec3 CalcDiffuse(vec3 lightDirection, vec3 lightColor, vec3 normal);
                        vec3 CalcSpecular(vec3 lightDirection, vec3 lightColor, vec3 normal, vec3 viewPos);

                        in vec3 FragPos;
                        in vec3 Normal;
                        in float ambientStrength;
                        in float diffuseStrength;
                        in float specularStrength;
                        in float shininess;
                        in vec3 objectColor;

                        out vec4 color;

                        void main()
                        {
	                        vec3 sunLightColor = vec3(1.0, 1.0, 1.0);
	                        vec3 sunLightDirection = normalize(vec3(0.25, -0.5, 0.1));

	                        vec3 ambient = CalcAmbient(sunLightColor);
	                        vec3 diffuse = CalcDiffuse(sunLightDirection, sunLightColor, Normal);
	                        vec3 specular = CalcSpecular(sunLightDirection, sunLightColor, Normal, viewPos);

	                        color = vec4((ambient + diffuse + specular) * objectColor, 1.0);
                        }

                        vec3 CalcAmbient(vec3 lightColor)
                        {
	                        return ambientStrength * lightColor;
                        }

                        vec3 CalcDiffuse(vec3 lightDirection, vec3 lightColor, vec3 normal)
                        {
	                        float diffuse = max(dot(normal, lightDirection), 0.0);
	                        return diffuse * lightColor;
                        }

                        vec3 CalcSpecular(vec3 lightDirection, vec3 lightColor, vec3 normal, vec3 viewPos){
	                        vec3 viewDir = normalize(FragPos - viewPos);
	                        vec3 reflectDir = reflect(-lightDirection, normal);
	                        float specular = pow(max(dot(viewDir, reflectDir), 0.0), shininess);
	                        return specularStrength * specular * lightColor;  
                        }
                    </script>
                    <script type="x-shader/x-vertex" id="sphere-vertex-shader">#version 300 es
                        precision mediump float;

                        layout(location = 0) in vec3 SphereVertices;

                        vec3 CalcObjectColor();
                        float CalcShininess();

                        uniform mat4 vp_matrix;
                        uniform mat4 m_matrix;

                        out vec3 FragPos;
                        out vec3 Normal;
                        out float ambientStrength;
                        out float diffuseStrength;
                        out float specularStrength;
                        out float shininess;
                        out vec3 objectColor;

                        void main()
                        {
	                        vec4 p = vec4(SphereVertices, 1.0);
	                        gl_Position = vp_matrix * m_matrix * p;

	                        FragPos = vec3(m_matrix * p);
	                        Normal = normalize( -SphereVertices);
	                        ambientStrength = 0.3;
	                        diffuseStrength = 0.5;
	                        specularStrength = 0.5;
	                        shininess = CalcShininess();
	                        objectColor = CalcObjectColor();
                        }

                        vec3 CalcObjectColor()
                        {
	                        return vec3(1.0, 0.5, 0.67);
                        }

                        float CalcShininess()
                        {
                        	return 26.0;
                        }
                    </script>
                    <script type="x-shader/x-fragment" id="triangle-fragment-shader">#version 300 es
                        precision mediump float;
                        
                        uniform vec3 viewPos;

                        vec3 CalcAmbient(vec3 lightColor);
                        vec3 CalcDiffuse(vec3 lightDirection, vec3 lightColor, vec3 normal);
                        vec3 CalcSpecular(vec3 lightDirection, vec3 lightColor, vec3 normal, vec3 viewPos);

                        in vec3 FragPos;
                        in vec3 Normal;
                        in float ambientStrength;
                        in float diffuseStrength;
                        in float specularStrength;
                        in float shininess;
                        in vec3 objectColor;

                        out vec4 color;

                        void main()
                        {
	                        vec3 sunLightColor = vec3(1.0, 1.0, 1.0);
	                        vec3 sunLightDirection = normalize(vec3(0.25, -0.5, 0.1));

	                        vec3 ambient = CalcAmbient(sunLightColor);
	                        vec3 diffuse = CalcDiffuse(sunLightDirection, sunLightColor, Normal);
	                        vec3 specular = CalcSpecular(sunLightDirection, sunLightColor, Normal, viewPos);

	                        color = vec4( objectColor, 1.0);
                        }

                        vec3 CalcAmbient(vec3 lightColor)
                        {
	                        return ambientStrength * lightColor;
                        }

                        vec3 CalcDiffuse(vec3 lightDirection, vec3 lightColor, vec3 normal)
                        {
	                        float diffuse = max(dot(normal, lightDirection), 0.0);
	                        return diffuse * lightColor;
                        }

                        vec3 CalcSpecular(vec3 lightDirection, vec3 lightColor, vec3 normal, vec3 viewPos){
	                        vec3 viewDir = normalize(FragPos - viewPos);
	                        vec3 reflectDir = reflect(-lightDirection, normal);
	                        float specular = pow(max(dot(viewDir, reflectDir), 0.0), shininess);
	                        return specularStrength * specular * lightColor;  
                        }
                    </script>
                    <script type="x-shader/x-vertex" id="triangle-vertex-shader">#version 300 es
                        precision mediump float;

                        layout(location = 0) in vec3 positions;
                        layout(location = 1) in vec3 normals;
                        layout(location = 2) in vec3 colors;

                        float CalcShininess();

                        uniform mat4 vp_matrix;
                        uniform mat4 m_matrix;

                        out vec3 FragPos;
                        out vec3 Normal;
                        out float ambientStrength;
                        out float diffuseStrength;
                        out float specularStrength;
                        out float shininess;
                        out vec3 objectColor;

                        void main()
                        {
	                        vec4 p = vec4(positions, 1.0);
	                        gl_Position = vp_matrix * m_matrix * p;

	                        FragPos = vec3(m_matrix * p);
	                        Normal = normals;
	                        ambientStrength = 0.3;
	                        diffuseStrength = 0.5;
	                        specularStrength = 0.5;
	                        shininess = CalcShininess();
	                        objectColor = colors;
                        }

                        float CalcShininess()
                        {
                        	return 26.0;
                        }
                    </script>
                    <script type="x-shader/x-fragment" id="frame-fragment-shader">#version 300 es
                        precision mediump float;
                        in vec2 TexCoords;

                        uniform sampler2D screenTexture;

                        out vec4 color;

                        void main()
                        {
                        	vec4 texColor = texture(screenTexture, TexCoords);
                        	color = texColor;
                        }
                    </script>
                    <script type="x-shader/x-vertex" id="frame-vertex-shader">#version 300 es
                        precision mediump float;
                        layout(location = 0) in vec2 position;
                        layout(location = 1) in vec2 texCoords;

                        out vec2 TexCoords;

                        void main()
                        {
	                        gl_Position = vec4(position.x, position.y, 0.0, 1.0);
	                        TexCoords = texCoords;
                        }
                    </script>
                    <script type="x-shader/x-fragment" id="blur-fragment-shader">#version 300 es
                        precision mediump float;
                        in vec2 TexCoords[11];

                        uniform sampler2D screenTexture;

                        out vec4 color;

                        void main()
                        {
                        	vec4 pixelColor = vec4(0.0);
                            pixelColor += texture(screenTexture, TexCoords[0]) * 0.0093;
                            pixelColor += texture(screenTexture, TexCoords[1]) * 0.028002;
                            pixelColor += texture(screenTexture, TexCoords[2]) * 0.065984;
                            pixelColor += texture(screenTexture, TexCoords[3]) * 0.121703;
                            pixelColor += texture(screenTexture, TexCoords[4]) * 0.175713;
                            pixelColor += texture(screenTexture, TexCoords[5]) * 0.198596;
                            pixelColor += texture(screenTexture, TexCoords[6]) * 0.175713;
                            pixelColor += texture(screenTexture, TexCoords[7]) * 0.121703;
                            pixelColor += texture(screenTexture, TexCoords[8]) * 0.065984;
                            pixelColor += texture(screenTexture, TexCoords[9]) * 0.028002;
                            pixelColor += texture(screenTexture, TexCoords[10]) * 0.0093;

                            color = pixelColor;
                            color.a = 1.0f;
                        }
                    </script>
                    <script type="x-shader/x-vertex" id="vertical-vertex-shader">#version 300 es
                        precision mediump float;
                        layout(location = 0) in vec2 position;
                        layout(location = 1) in vec2 texCoords;

                        uniform float textureHeight;

                        out vec2 TexCoords[11];

                        void main()
                        {
                            float i_float;
                            float pixelHeight = 1.0 / textureHeight;
	                        gl_Position = vec4(position.x, position.y, 0.0, 1.0);
	                        for(int i = -5; i< 5; i++)
                            {
                                i_float = float(i);
                                TexCoords[i + 5] = texCoords + vec2(0.0 , pixelHeight * i_float);
                            }
                        }
                    </script>
                    <script type="x-shader/x-vertex" id="horizontal-vertex-shader">#version 300 es
                        precision mediump float;
                        layout(location = 0) in vec2 position;
                        layout(location = 1) in vec2 texCoords;

                        uniform float textureWidth;

                        out vec2 TexCoords[11];

                        void main()
                        {
                            float i_float;
                            float pixelWidth = 1.0 / textureWidth;
	                        gl_Position = vec4(position.x, position.y, 0.0, 1.0);
	                        for(int i = -5; i< 5; i++)
                            {
                                i_float = float(i);
                                TexCoords[i + 5] = texCoords + vec2(pixelWidth * i_float, 0.0);
                            }
                        }
                    </script>
                </div>
        <script src="/Pages/WorkingSpace/app.js" defer="defer" type="module"></script>

        <link href="/Pages/MasterPage/MasterPageStyle.css" rel="stylesheet" />
        <link href="/Pages/HomePage/HomePageStyle.css" rel="stylesheet" />
        <link href="/Pages/Library/LibraryStyle.css" rel="stylesheet" />
        <link href="/Pages/AssetPage/AssetPageStyle.css" rel="stylesheet" />
        <link href="/Pages/WorkingSpace/WorkingSpaceStyle.css" rel="stylesheet" />


        <div id="content">
            <asp:ContentPlaceHolder id="body" runat="server"></asp:ContentPlaceHolder>
        </div>
    </div>
</body>
</html>
